name: Testing

on:
  push:
    branches:
      - '*'
    tags:
      - 'v*'
  pull_request:
    branches:
      - '*'
  schedule:
    - cron: "0 13 * * 1"

jobs:
  build-and-test:
    name: Testing (Python ${{ matrix.python-version }}, on ${{ matrix.os }}, with MKL ${{ matrix.mkl-version }})
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: False
      matrix:
        os: [ubuntu-latest, macos-12, windows-latest]
        python-version: ["3.10", "3.11", "3.12", "3.13"]
        mkl-version: ['2023', '2024']
        include:
          - os: ubuntu-latest
            python-version: "3.12"
            coverage: ${{ true }}
        exclude:
          - os: macos-12
            mkl-version: "2024"

    steps:
    - uses: actions/checkout@v4
    - name: Setup Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: ${{ matrix.python-version }}
        channels: defaults
        channel-priority: true
        activate-environment: dev

    - name: Conda information
      run: |
        conda info
        conda list
        conda config --show

    - name: Create environment
      run: |
        conda install --quiet --yes -c conda-forge \
          pip numpy scipy cython mkl=${{ matrix.mkl-version }} pytest \
          mkl-devel pkg-config meson-python meson ninja setuptools_scm \
          ${{ matrix.coverage && 'coverage' || ''}} \
          ${{ matrix.os == 'windows-latest' && '"libblas=*=*mkl"' || ''}}

    - name: Install Our Package
      run: |
        python -m pip install --no-build-isolation --verbose --editable . \
          --config-setting=compile-args=-v \
          ${{ matrix.coverage && '--config-settings=setup-args="-Db_coverage=true"' || ''}} \
          ${{ matrix.os == 'windows-latest' && '--config-settings=setup-args="-Dvsenv=true"' || ''}}

        conda list

    - name: Run Tests
      run: |
        ${{ matrix.coverage && 'coverage run -m' || '' }} pytest -s -v
        ${{ matrix.coverage && 'coverage xml' || '' }}

    - name: Upload coverage
      if: ${{ matrix.coverage }}
      uses: codecov/codecov-action@v4
      with:
        verbose: true # optional (default = false)
        token: ${{ secrets.CODECOV_TOKEN }} # required

  distribute:
    name: Distributing from 3.11
    needs: build-and-test
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags')
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}

    steps:
    - uses: actions/checkout@v4
    - name: Setup Conda
      uses: conda-incubator/setup-miniconda@v3
      with:
        python-version: "3.11"
        channels: defaults
        channel-priority: true
        activate-environment: dev

    - name: Install Env
      run: |
        conda info
        conda list
        conda config --show

    - name: Create environment
      run: |
        conda install --quiet --yes -c conda-forge \
          pip numpy scipy cython mkl=2023 \
          mkl-devel pkg-config meson-python meson ninja setuptools_scm \
          python-build

    - name: Generate Source Distribution
      run: |
        python -m build --no-isolation --skip-dependency-check --sdist .

    - name: pypi-publish
      uses: pypa/gh-action-pypi-publish@v1.4.2
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
        skip_existing: true
